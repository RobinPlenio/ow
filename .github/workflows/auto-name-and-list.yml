name: Auto name images & build images.json

on:
  push:            # run on ANY push to any branch
    branches:
      - '**'
  workflow_dispatch:  # let you click "Run workflow"

permissions:
  contents: write

jobs:
  go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug â€” show branch and tree
        run: |
          echo "REF: $GITHUB_REF  EVENT: $GITHUB_EVENT_NAME"
          ls -la

      - name: Ensure assets/ exists & move root images in
        run: |
          mkdir -p assets
          shopt -s nullglob nocaseglob
          for f in *.{png,jpg,jpeg,webp,avif}; do
            [ -f "$f" ] || continue
            echo "Move $f -> assets/"
            mv "$f" assets/
          done
          echo "Tree after move:"
          ls -la assets || true

      - name: Rename to OW_### and build images.json
        run: |
          python3 - << 'PY'
import os, re, json, time

ASSETS = "assets"
KEEP = {"png","jpg","jpeg","webp","avif"}
# accept OW_1 / OW_01 / OW_001 as existing; we'll canonize to 3 digits
ANY_OW = re.compile(r'^OW_(\d+)\.(png|jpg|jpeg|webp|avif)$', re.I)

os.makedirs(ASSETS, exist_ok=True)

# Collect all candidate images in assets/
entries = []
for f in os.listdir(ASSETS):
    p = os.path.join(ASSETS, f)
    if not os.path.isfile(p): 
        continue
    ext = f.rsplit('.',1)[-1].lower() if '.' in f else ''
    if ext in KEEP:
        st = os.stat(p).st_mtime
        entries.append((f, st))

# Determine used indices (from any OW_### shape)
used = set()
for f, _ in entries:
    m = ANY_OW.match(f)
    if m:
        used.add(int(m.group(1)))

next_idx = max(used) if used else 0

# Rename non-canonical names to OW_###.ext (3 digits)
changes = []
for f, _ in sorted(entries, key=lambda t: t[1]):  # oldest first
    m = ANY_OW.match(f)
    p = os.path.join(ASSETS, f)
    if m:
        # canonize to 3 digits if needed
        idx = int(m.group(1))
        ext = f.rsplit('.',1)[-1].lower()
        canon = f"OW_{idx:03d}.{ext}"
        if f != canon and not os.path.exists(os.path.join(ASSETS, canon)):
            os.rename(p, os.path.join(ASSETS, canon))
            changes.append((f, canon))
    else:
        ext = f.rsplit('.',1)[-1].lower()
        next_idx += 1
        canon = f"OW_{next_idx:03d}.{ext}"
        os.rename(p, os.path.join(ASSETS, canon))
        changes.append((f, canon))

# Build images.json ordered by numeric index
final = []
for f in os.listdir(ASSETS):
    m = ANY_OW.match(f)
    if m:
        final.append((int(m.group(1)), f))
final.sort(key=lambda t: t[0])

with open("images.json","w",encoding="utf-8") as fh:
    json.dump([f"assets/{name}" for _, name in final], fh, indent=2, ensure_ascii=False)

print("Renamed/Canonized:", changes)
print("Total images:", len(final))
PY

      - name: Show images.json
        run: cat images.json

      - name: Commit changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add assets images.json
          git commit -m "Auto-move, canonize names, and update images.json" || echo "No changes"
          git push
