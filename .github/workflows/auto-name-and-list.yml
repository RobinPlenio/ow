name: Auto name images & build images.json
on:
  push:
    # run on any push so uploads to root are handled
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  rename_and_list:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare folders
        run: mkdir -p assets

      - name: Move + rename + build manifest
        run: |
          python3 - << 'PY'
import os, re, json, shutil, time

ROOT = "."
ASSETS = "assets"
KEEP = {"png","jpg","jpeg","webp","avif"}
CANON = re.compile(r'^OW_(\d{3})\.(png|jpg|jpeg|webp|avif)$', re.I)

os.makedirs(ASSETS, exist_ok=True)

# 1) Move any image in repo root into assets/
moved = []
for f in list(os.listdir(ROOT)):
    if f.startswith('.') or f in {'.git','assets','.github'}: 
        continue
    p = os.path.join(ROOT, f)
    if not os.path.isfile(p): 
        continue
    ext = f.rsplit('.',1)[-1].lower() if '.' in f else ''
    if ext in KEEP:
        dest = os.path.join(ASSETS, f)
        # if name exists, add timestamp suffix before extension
        if os.path.exists(dest):
            stem, e = os.path.splitext(f)
            dest = os.path.join(ASSETS, f"{stem}-{int(time.time())}{e}")
        shutil.move(p, dest)
        moved.append((f, os.path.basename(dest)))

# 2) Collect canonical indices already in assets/
used = set()
for f in os.listdir(ASSETS):
    m = CANON.match(f)
    if m:
        used.add(int(m.group(1)))
next_idx = max(used) if used else 0

# 3) Rename any non-canonical image inside assets/
changes = []
candidates = []
for f in os.listdir(ASSETS):
    if f.lower() == "optimized": 
        continue
    p = os.path.join(ASSETS, f)
    if not os.path.isfile(p): 
        continue
    ext = f.rsplit('.',1)[-1].lower() if '.' in f else ''
    if ext in KEEP:
        candidates.append((p, f, os.stat(p).st_mtime))

# oldest first for stable ordering
for p, f, mtime in sorted(candidates, key=lambda t: t[2]):
    if CANON.match(f):
        continue
    ext = f.rsplit('.',1)[-1].lower()
    next_idx += 1
    new = f"OW_{next_idx:03d}.{ext}"
    os.rename(p, os.path.join(ASSETS, new))
    changes.append((f, new))

# 4) Build images.json sorted by numeric index
entries = []
for f in os.listdir(ASSETS):
    m = CANON.match(f)
    if m:
        entries.append((int(m.group(1)), f))
entries.sort(key=lambda t: t[0])
with open("images.json","w",encoding="utf-8") as fh:
    json.dump([f"assets/{name}" for _, name in entries], fh, indent=2, ensure_ascii=False)

print("Moved from root -> assets:", moved)
print("Renamed in assets:", changes)
print("Total images:", len(entries))
PY

      - name: Commit changes
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add assets images.json
          git commit -m "Auto-move, rename, and update images.json" || echo "No changes"
          git push
